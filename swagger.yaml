openapi: 3.0.0
info:
  title: Twitter-Retro API
  version: 1.0.0
  description: API de Twitter Retro en devéloppement...

paths:
  /auth/register:
    post:
      summary: Enregistrement d'un nouvel utilisateur
      description: Permet à un utilisateur de s'enregistrer dans le système.
      tags:
        - Authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag:
                  type: string
                  description: Id tag de l'utilisateur.
                fullName:
                  type: string
                  description: Nom de l'utilisateur.
                email:
                  type: string
                  format: email
                  description: Adresse e-mail de l'utilisateur.
                password:
                  type: string
                  format: password
                  description: Mot de passe de l'utilisateur.
                picturePath:
                  type: string
                  description: Chemin de l'image de profil de l'utilisateur.
                friends:
                  type: array
                  items:
                    type: string
                  description: Liste d'amis de l'utilisateur.
      responses:
        "201":
          description: Utilisateur crée avec succès
        "500":
          description: Erreur Interne
  /auth/login:
    post:
      summary: Connexion de l'utilisateur
      description: Cette route permet à un utilisateur existant de se connecter au système.
      tags:
        - Authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: L'adresse e-mail de l'utilisateur.
                password:
                  type: string
                  format: password
                  description: Le mot de passe de l'utilisateur.
      responses:
        "200":
          description: Connexion réussi
        "401":
          description: Mot de passe ou email incorrect
        "500":
          description: Erreur Interne
  /auth/forgot-password:
    post:
      summary: Demande de réinitialisation de mot de passe
      description: Permet à un utilisateur d'initier le processus de réinitialisation de mot de passe en demandant un e-mail de réinitialisation.
      tags:
        - Authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: L'adresse e-mail de l'utilisateur.
      responses:
        "200":
          description: Email de réinitialisation envoyé avec succès
        "404":
          description: Utilisateur non trouvé
        "500":
          description: Erreur Interne
  /auth/reset-password:
    post:
      summary: Réinitialisation de mot de passe
      description: Permet à un utilisateur de réinitialiser son mot de passe à l'aide du token de réinitialisation.
      tags:
        - Authentification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: Le token de réinitialisation de mot de passe.
                newPassword:
                  type: string
                  format: password
                  description: Le nouveau mot de passe de l'utilisateur.
      responses:
        "200":
          description: Mot de passe réinitialisé avec succès
        "400":
          description: Token invalide ou expiré
        "500":
          description: Erreur Interne
  /auth/logout:
    post:
      summary: Déconnexion de l'utilisateur
      description: Cette route permet à un utilisateur connecté de se déconnecter du système.
      tags:
        - Authentification
      responses:
        "403":
          description: Accès interdit
        "200":
          description: Déconnexion réussie
        "500":
          description: Erreur Interne
  /users/follow/{userId}:
    post:
      summary: Follow a user
      description: Follow another user on the platform.
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to follow.
          schema:
            type: string
      responses:
        "200":
          description: User followed successfully
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /users/unfollow/{userId}:
    post:
      summary: Unfollow a user
      description: Unfollow a user on the platform.
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          description: ID of the user to unfollow.
          schema:
            type: string
      responses:
        "200":
          description: User unfollowed successfully
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error        
components:
  schemas:
    User:
      type: object
      required:
        - firstName
        - lastName
        - email
      properties:
        _id:
          type: string
          description: L'identifiant unique de l'utilisateur.
        tag:
          type: string
          description: Id tag de l'utilisateur..
        fullName:
          type: string
          description: Nom de l'utilisateur.
        email:
          type: string
          format: email
          description: L'adresse e-mail de l'utilisateur.
        password:
          type: string
          description: Le mot de passe de l'utilisateur.
        picturePath:
          type: string
          description: Le chemin de l'image de profil de l'utilisateur.
        friends:
          type: array
          description: La liste des amis de l'utilisateur.
          items:
            type: string
    ResetToken:
      type: object
      properties:
        token:
          type: string
          description: The reset token received in the password reset email.
        expires:
          type: integer
          format: int64
          description: The expiry timestamp of the reset token.
        userId:
          type: string
          description: The ID of the user associated with the reset token.
